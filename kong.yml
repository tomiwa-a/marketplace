_format_version: "3.0"
_transform: true

services:
  - name: user-service
    url: http://user-service:2000
    routes:
      - name: user-route
        paths:
          - /api/v1/users
        path_handling: "v0"

  - name: products-service
    url: http://products-service:3000
    routes:
      - name: products-route
        paths:
          - /api/v1/products
        path_handling: "v0"

plugins:
  - name: auth-plugin
    service: user-service
    config:
      jwt_secret: "shuoij2ijvi0939"
      activation_endpoint: "http://user-service:2000/%s"
      cache_ttl: 30
      timeout: 3000

  - name: auth-plugin
    service: products-service
    config:
      jwt_secret: "shuoij2ijvi0939"
      activation_endpoint: "http://user-service:2000/%s"
      cache_ttl: 30
      timeout: 3000


# plugins:
#   - name: jwt
#     enabled: true
#     service: user-service
#     config:
#       key_claim_name: iss
#       cookie_names: ["user_auth_token"]
#       claims_to_verify: 
#         - exp
#       anonymous: "public-user"  # Allow no-JWT requests
#       # claims_to_headers: ["role", "verified", "sub"]
#       run_on_preflight: false  # Let CORS work freely

  # # Request Transformer to forward JWT claims as headers
  # - name: request-transformer
  #   service: user-service
  #   config:
  #     add:
  #       headers:
  #         - "X-Claim-Role:$(jwt_claims.role or '')"  # Map "role" claim to X-Claim-Role
  #         - "X-Claim-Sub:$(jwt_claims.sub or '')"  # Map "sub" claim to X-Claim-Sub
  